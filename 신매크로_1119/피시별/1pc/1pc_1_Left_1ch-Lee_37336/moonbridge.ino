void moonbridge_angae_1() {
  anum = random(0, 7);
  jnum = random(0, 2);
  jjnum = random(0, 3);
  
  PAUSE_POINT(); 
  Jumpdividerdouble();
  PAUSE_POINT(); 
  S16();
  PAUSE_POINT(); 
  Jumpdivide2();
  PAUSE_POINT(); 
  Jump();
  PAUSE_POINT(); 
  S5();
  PAUSE_POINT(); 
  d_val(400);
  PAUSE_POINT(); 
  Jumpdivideleft();
  PAUSE_POINT(); 
  Jumpdividedouble();
  PAUSE_POINT(); 
  d_val(700);
  PAUSE_POINT(); 
  Jumpdividedouble();
  PAUSE_POINT(); 
  d_val(700);
  PAUSE_POINT(); 

  PAUSE_POINT(); 
  Jumpdividerdouble();
  PAUSE_POINT();
  Jumpdivide2();
  PAUSE_POINT(); 
  Jump();
  PAUSE_POINT();
  S5();
  PAUSE_POINT();
  d_val(400);
  PAUSE_POINT();
  Jumpdivideleft();
  PAUSE_POINT();
  S1();
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  d_val(700);
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  d_val(700);
  PAUSE_POINT();

  PAUSE_POINT();
  Jumpdividerdouble();
  PAUSE_POINT();
  Jumpdivide2();
  PAUSE_POINT();
  Jump();
  PAUSE_POINT();
  S5();
  PAUSE_POINT();
  d_val(400);
  PAUSE_POINT();
  Jumpdivideldouble();
  PAUSE_POINT();
  JumpQ();
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  d_val(700);
  PAUSE_POINT();

  PAUSE_POINT();
  Jumpdividerdouble();
  PAUSE_POINT();
  Jumpdivide2();
  PAUSE_POINT();
  Jump();
  PAUSE_POINT();
  S5();
  PAUSE_POINT();
  d_val(400);
  PAUSE_POINT();
  Jumpdivideldouble();
  PAUSE_POINT();
  JumpE();
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  d_val(700);
  PAUSE_POINT();

  PAUSE_POINT();
  for (int i = 0; i < 2; i++) {
  PAUSE_POINT();
  Jumpdividerdouble();
  PAUSE_POINT();
  Jumpdivide2();
  PAUSE_POINT();
  Jump();
  PAUSE_POINT();
  S();
  PAUSE_POINT();
  d_val(1800);
  PAUSE_POINT();
  Jumpdivideleft();
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  d_val(700);
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  d_val(700);
  PAUSE_POINT();
  }

  PAUSE_POINT();
  Jumpdividerdouble();
  PAUSE_POINT();
  Jumpdivide2();
  PAUSE_POINT();
  Jump();
  PAUSE_POINT();
  S();
  PAUSE_POINT();
  d_val(1800);
  PAUSE_POINT();
  Left();
  PAUSE_POINT();
  Jumpdivideldouble();
  PAUSE_POINT();
  JumpR();
  PAUSE_POINT();
  Jumpdividedouble();
  PAUSE_POINT();
  Djump();
  PAUSE_POINT();
  d_val(1200);
  PAUSE_POINT();
  
  Reset();
}
