
void test1() {
  anum = random(0, 7);
  jnum = random(0, 2);
  jjnum = random(0, 2);

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_150();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  A();
  _p_p();
  d_650();
  _p_p();
  Right();
  _p_p();
  Jumpdivideright();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_750();
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_150();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  W();
  _p_p();
  d_650();
  _p_p();
  Right();  
  _p_p();
  Jumpdivideright();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_750();
  _p_p();

  _p_p();
  Left();
  _p_p();
  k_5();
  _p_p();
  d_750();
  _p_p();
  k_2();
  _p_p();
  d_550();
  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_150();
  _p_p();
  S();
  _p_p();
  d_1500();
  _p_p();
  A();
  _p_p();
  d_650();
  _p_p();
  Right();  
  _p_p();
  Jumpdivideright();
  _p_p();
  Jumpdivide4();
  _p_p();
  d_750();
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdivide();
  _p_p();
  Jumpdivide2();
  _p_p();
  d_150();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  W();
  _p_p();
  d_650();
  _p_p();
  Right();  
  _p_p();
  Jumpdivideright();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_750();  
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_150();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  A();
  _p_p();
  d_650();
  _p_p();
  Right();  
  _p_p();
  Jumpdivideright();
  _p_p();
  Jumpdivide();
  _p_p();
  d_100();
  _p_p();
  Q();
  _p_p();
  d_200();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_750();
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_150();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  pUp();
  _p_p();
  D();
  _p_p();
  d_550();
  _p_p();
  W();
  _p_p();
  d_650();
  _p_p();
  Right();  
  _p_p();
  Jumpdivideright();
  _p_p();
  Jumpdivide3();
  _p_p();
  d_750();
  _p_p();

  Reset();
}
