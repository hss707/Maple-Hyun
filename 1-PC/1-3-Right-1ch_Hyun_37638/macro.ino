
void test1() {
  anum = random(0, 7);
  jnum = random(0, 2);
  jjnum = random(0, 3);

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  JumpX();
  _p_p();
  d_150();
  _p_p();
  Jumpdividedouble();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  d_150();
  _p_p();
  Jump();
  _p_p();
  S();
  _p_p();
  d_1700();
  _p_p();
  Jumpdivideright();   
  _p_p();
  JumpC();
  _p_p();
  d_150();  
  _p_p();
  Jumpdivide();
  _p_p();
  Jumpdividedouble();
  _p_p();
  d_100();  
  _p_p();
  Jumpdivide();
  _p_p();
  d_50();
  _p_p();
  Jumpdivide();    
  _p_p();
  d_1250();
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  JumpX();
  _p_p();
  d_150();
  _p_p();
  Jumpdividedouble();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  d_150();
  _p_p();
  Jump();
  _p_p();
  S();
  _p_p();
  d_1700();
  _p_p();
  Jumpdivideright();   
  _p_p();
  Jumpdivide();
  _p_p();
  JumpC();
  _p_p();
  d_150();    
  _p_p();
  Jumpdividedouble();
  _p_p();
  d_120();  
  _p_p();
  Jumpdivide();
  _p_p();
  d_50();
  _p_p();
  Jumpdivide(); 
  _p_p();
  d_1250();  
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  Jumpdividedouble();
  _p_p();
  JumpX();
  _p_p();
  d_150();  
  _p_p();
  Jumpdividedouble();  
  _p_p();
  d_150();
  _p_p();
  Jump();
  _p_p();
  S();
  _p_p();
  d_1700();
  _p_p();
  Jumpdivideright();   
  _p_p();
  JumpC();
  _p_p();
  d_150();  
  _p_p();
  Jumpdivide();
  _p_p();
  Jumpdividedouble();
  _p_p();
  d_130();  
  _p_p();
  Jumpdivide();
  _p_p();
  d_50();
  _p_p();
  Jumpdivide(); 
  _p_p();
  d_1250();
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  Jumpdividedouble();     
  _p_p();
  Jumpdividedouble(); 
  _p_p();
  JumpX();
  _p_p();
  d_150();  
  _p_p();
  Jumpdividedouble();  
  _p_p();
  d_150();
  _p_p();
  Jump();
  _p_p();
  S();
  _p_p();
  d_1700();
  _p_p();
  Jumpdivideright(); 
  _p_p();
  JumpC();
  _p_p();
  d_150();     
  _p_p();
  Jumpdivide();   
  _p_p();
  Jumpdividedouble();
  _p_p();
  d_120();  
  _p_p();
  Jumpdivide();
  _p_p();
  d_50();
  _p_p();
  Jumpdivide();  
  _p_p();
  d_1250();  
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  JumpX();
  _p_p();
  d_150();  
  _p_p();
  Jumpdividedouble();  
  _p_p();
  Jumpdividedouble();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  d_150();
  _p_p();
  Jump();
  _p_p();
  S();
  _p_p();
  d_1700();
  _p_p();
  Jumpdivideright();   
  _p_p();
  JumpC();
  _p_p();
  d_150();  
  _p_p();
  Jumpdivide();
  _p_p();
  Jumpdividedouble();
  _p_p();
  d_120();  
  _p_p();
  Jumpdivide();
  _p_p();
  d_50();
  _p_p();
  Jumpdivide();  
  _p_p();
  d_1250();
  _p_p();

  _p_p();
  Jumpdivideleft();
  _p_p();
  JumpX();
  _p_p();
  d_150();  
  _p_p();
  Jumpdividedouble();  
  _p_p();
  Jumpdividedouble();
  _p_p();
  Jumpdividedouble();  
  _p_p();
  d_150();
  _p_p();
  Jump();
  _p_p();
  S();
  _p_p();
  d_1700();
  _p_p();
  Jumpdivideright();   
  _p_p();
  Jumpdivide();
  _p_p();
  JumpC();
  _p_p();
  d_150();    
  _p_p();
  Jumpdividedouble();
  _p_p();
  d_110();  
  _p_p();
  Jumpdivide();
  _p_p();
  d_50();
  _p_p();
  Jumpdivide(); 
  _p_p();
  d_1250();
  _p_p();

  Reset();
}
